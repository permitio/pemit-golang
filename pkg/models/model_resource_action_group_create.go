/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the ResourceActionGroupCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceActionGroupCreate{}

// ResourceActionGroupCreate struct for ResourceActionGroupCreate
type ResourceActionGroupCreate struct {
	// A URL-friendly name of the action group (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the action group.
	Key string `json:"key"`
	// The name of the action group
	Name string `json:"name"`
	// An optional longer description of what this action group represents in your system
	Description *string `json:"description,omitempty"`
	// optional dictionary of key-value pairs that can be used to store arbitrary metadata about this action group. This metadata can be used to filter action groups using query parameters with attr_ prefix
	Attributes map[string]interface{} `json:"attributes,omitempty"`
	Actions    []string               `json:"actions,omitempty"`
}

// NewResourceActionGroupCreate instantiates a new ResourceActionGroupCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceActionGroupCreate(key string, name string) *ResourceActionGroupCreate {
	this := ResourceActionGroupCreate{}
	this.Key = key
	this.Name = name
	return &this
}

// NewResourceActionGroupCreateWithDefaults instantiates a new ResourceActionGroupCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceActionGroupCreateWithDefaults() *ResourceActionGroupCreate {
	this := ResourceActionGroupCreate{}
	return &this
}

// GetKey returns the Key field value
func (o *ResourceActionGroupCreate) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *ResourceActionGroupCreate) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *ResourceActionGroupCreate) SetKey(v string) {
	o.Key = v
}

// GetName returns the Name field value
func (o *ResourceActionGroupCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ResourceActionGroupCreate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ResourceActionGroupCreate) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ResourceActionGroupCreate) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceActionGroupCreate) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ResourceActionGroupCreate) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ResourceActionGroupCreate) SetDescription(v string) {
	o.Description = &v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *ResourceActionGroupCreate) GetAttributes() map[string]interface{} {
	if o == nil || IsNil(o.Attributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceActionGroupCreate) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Attributes) {
		return map[string]interface{}{}, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *ResourceActionGroupCreate) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]interface{} and assigns it to the Attributes field.
func (o *ResourceActionGroupCreate) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *ResourceActionGroupCreate) GetActions() []string {
	if o == nil || IsNil(o.Actions) {
		var ret []string
		return ret
	}
	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceActionGroupCreate) GetActionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Actions) {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *ResourceActionGroupCreate) HasActions() bool {
	if o != nil && !IsNil(o.Actions) {
		return true
	}

	return false
}

// SetActions gets a reference to the given []string and assigns it to the Actions field.
func (o *ResourceActionGroupCreate) SetActions(v []string) {
	o.Actions = v
}

func (o ResourceActionGroupCreate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceActionGroupCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["key"] = o.Key
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !IsNil(o.Actions) {
		toSerialize["actions"] = o.Actions
	}
	return toSerialize, nil
}

type NullableResourceActionGroupCreate struct {
	value *ResourceActionGroupCreate
	isSet bool
}

func (v NullableResourceActionGroupCreate) Get() *ResourceActionGroupCreate {
	return v.value
}

func (v *NullableResourceActionGroupCreate) Set(val *ResourceActionGroupCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceActionGroupCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceActionGroupCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceActionGroupCreate(val *ResourceActionGroupCreate) *NullableResourceActionGroupCreate {
	return &NullableResourceActionGroupCreate{value: val, isSet: true}
}

func (v NullableResourceActionGroupCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceActionGroupCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

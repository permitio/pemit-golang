/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"fmt"
)

// ResponseListConditionSetsV2SchemaProjIdEnvIdConditionSetsGet struct for ResponseListConditionSetsV2SchemaProjIdEnvIdConditionSetsGet
type ResponseListConditionSetsV2SchemaProjIdEnvIdConditionSetsGet struct {
	PaginatedResultConditionSetRead *PaginatedResultConditionSetRead
	ConditionSetRead                *[]ConditionSetRead
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *ResponseListConditionSetsV2SchemaProjIdEnvIdConditionSetsGet) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into PaginatedResultConditionSetRead
	err = json.Unmarshal(data, &dst.PaginatedResultConditionSetRead)
	if err == nil {
		jsonPaginatedResultConditionSetRead, _ := json.Marshal(dst.PaginatedResultConditionSetRead)
		if string(jsonPaginatedResultConditionSetRead) == "{}" { // empty struct
			dst.PaginatedResultConditionSetRead = nil
		} else {
			return nil // data stored in dst.PaginatedResultConditionSetRead, return on the first match
		}
	} else {
		dst.PaginatedResultConditionSetRead = nil
	}

	// try to unmarshal JSON data into []ConditionSetRead
	err = json.Unmarshal(data, &dst.ConditionSetRead)
	if err == nil {
		jsonConditionSetRead, _ := json.Marshal(dst.ConditionSetRead)
		if string(jsonConditionSetRead) == "{}" { // empty struct
			dst.ConditionSetRead = nil
		} else {
			return nil // data stored in dst.[]ConditionSetRead, return on the first match
		}
	} else {
		dst.ConditionSetRead = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(ResponseListConditionSetsV2SchemaProjIdEnvIdConditionSetsGet)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *ResponseListConditionSetsV2SchemaProjIdEnvIdConditionSetsGet) MarshalJSON() ([]byte, error) {
	if src.PaginatedResultConditionSetRead != nil {
		return json.Marshal(&src.PaginatedResultConditionSetRead)
	}

	if src.ConditionSetRead != nil {
		return json.Marshal(&src.ConditionSetRead)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableResponseListConditionSetsV2SchemaProjIdEnvIdConditionSetsGet struct {
	value *ResponseListConditionSetsV2SchemaProjIdEnvIdConditionSetsGet
	isSet bool
}

func (v NullableResponseListConditionSetsV2SchemaProjIdEnvIdConditionSetsGet) Get() *ResponseListConditionSetsV2SchemaProjIdEnvIdConditionSetsGet {
	return v.value
}

func (v *NullableResponseListConditionSetsV2SchemaProjIdEnvIdConditionSetsGet) Set(val *ResponseListConditionSetsV2SchemaProjIdEnvIdConditionSetsGet) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseListConditionSetsV2SchemaProjIdEnvIdConditionSetsGet) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseListConditionSetsV2SchemaProjIdEnvIdConditionSetsGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseListConditionSetsV2SchemaProjIdEnvIdConditionSetsGet(val *ResponseListConditionSetsV2SchemaProjIdEnvIdConditionSetsGet) *NullableResponseListConditionSetsV2SchemaProjIdEnvIdConditionSetsGet {
	return &NullableResponseListConditionSetsV2SchemaProjIdEnvIdConditionSetsGet{value: val, isSet: true}
}

func (v NullableResponseListConditionSetsV2SchemaProjIdEnvIdConditionSetsGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseListConditionSetsV2SchemaProjIdEnvIdConditionSetsGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

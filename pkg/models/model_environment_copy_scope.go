/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the EnvironmentCopyScope type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentCopyScope{}

// EnvironmentCopyScope struct for EnvironmentCopyScope
type EnvironmentCopyScope struct {
	Resources    *Resources    `json:"resources,omitempty"`
	Roles        *Roles        `json:"roles,omitempty"`
	UserSets     *UserSets     `json:"user_sets,omitempty"`
	ResourceSets *ResourceSets `json:"resource_sets,omitempty"`
}

// NewEnvironmentCopyScope instantiates a new EnvironmentCopyScope object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentCopyScope() *EnvironmentCopyScope {
	this := EnvironmentCopyScope{}
	return &this
}

// NewEnvironmentCopyScopeWithDefaults instantiates a new EnvironmentCopyScope object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentCopyScopeWithDefaults() *EnvironmentCopyScope {
	this := EnvironmentCopyScope{}
	return &this
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *EnvironmentCopyScope) GetResources() Resources {
	if o == nil || IsNil(o.Resources) {
		var ret Resources
		return ret
	}
	return *o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCopyScope) GetResourcesOk() (*Resources, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *EnvironmentCopyScope) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given Resources and assigns it to the Resources field.
func (o *EnvironmentCopyScope) SetResources(v Resources) {
	o.Resources = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *EnvironmentCopyScope) GetRoles() Roles {
	if o == nil || IsNil(o.Roles) {
		var ret Roles
		return ret
	}
	return *o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCopyScope) GetRolesOk() (*Roles, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *EnvironmentCopyScope) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given Roles and assigns it to the Roles field.
func (o *EnvironmentCopyScope) SetRoles(v Roles) {
	o.Roles = &v
}

// GetUserSets returns the UserSets field value if set, zero value otherwise.
func (o *EnvironmentCopyScope) GetUserSets() UserSets {
	if o == nil || IsNil(o.UserSets) {
		var ret UserSets
		return ret
	}
	return *o.UserSets
}

// GetUserSetsOk returns a tuple with the UserSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCopyScope) GetUserSetsOk() (*UserSets, bool) {
	if o == nil || IsNil(o.UserSets) {
		return nil, false
	}
	return o.UserSets, true
}

// HasUserSets returns a boolean if a field has been set.
func (o *EnvironmentCopyScope) HasUserSets() bool {
	if o != nil && !IsNil(o.UserSets) {
		return true
	}

	return false
}

// SetUserSets gets a reference to the given UserSets and assigns it to the UserSets field.
func (o *EnvironmentCopyScope) SetUserSets(v UserSets) {
	o.UserSets = &v
}

// GetResourceSets returns the ResourceSets field value if set, zero value otherwise.
func (o *EnvironmentCopyScope) GetResourceSets() ResourceSets {
	if o == nil || IsNil(o.ResourceSets) {
		var ret ResourceSets
		return ret
	}
	return *o.ResourceSets
}

// GetResourceSetsOk returns a tuple with the ResourceSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentCopyScope) GetResourceSetsOk() (*ResourceSets, bool) {
	if o == nil || IsNil(o.ResourceSets) {
		return nil, false
	}
	return o.ResourceSets, true
}

// HasResourceSets returns a boolean if a field has been set.
func (o *EnvironmentCopyScope) HasResourceSets() bool {
	if o != nil && !IsNil(o.ResourceSets) {
		return true
	}

	return false
}

// SetResourceSets gets a reference to the given ResourceSets and assigns it to the ResourceSets field.
func (o *EnvironmentCopyScope) SetResourceSets(v ResourceSets) {
	o.ResourceSets = &v
}

func (o EnvironmentCopyScope) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentCopyScope) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Resources) {
		toSerialize["resources"] = o.Resources
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.UserSets) {
		toSerialize["user_sets"] = o.UserSets
	}
	if !IsNil(o.ResourceSets) {
		toSerialize["resource_sets"] = o.ResourceSets
	}
	return toSerialize, nil
}

type NullableEnvironmentCopyScope struct {
	value *EnvironmentCopyScope
	isSet bool
}

func (v NullableEnvironmentCopyScope) Get() *EnvironmentCopyScope {
	return v.value
}

func (v *NullableEnvironmentCopyScope) Set(val *EnvironmentCopyScope) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentCopyScope) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentCopyScope) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentCopyScope(val *EnvironmentCopyScope) *NullableEnvironmentCopyScope {
	return &NullableEnvironmentCopyScope{value: val, isSet: true}
}

func (v NullableEnvironmentCopyScope) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentCopyScope) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

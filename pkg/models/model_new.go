/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the New type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &New{}

// New Description of the environment to create. This environment must not already exist.
type New struct {
	// A URL-friendly name of the environment (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the environment.
	Key string `json:"key"`
	// The name of the environment
	Name string `json:"name"`
	// an optional longer description of the environment
	Description *string `json:"description,omitempty"`
	// when using gitops feature, an optional branch name for the environment
	CustomBranchName *string `json:"custom_branch_name,omitempty"`
	Jwks             *Jwks   `json:"jwks,omitempty"`
}

// NewNew instantiates a new New object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNew(key string, name string) *New {
	this := New{}
	this.Key = key
	this.Name = name
	return &this
}

// NewNewWithDefaults instantiates a new New object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNewWithDefaults() *New {
	this := New{}
	return &this
}

// GetKey returns the Key field value
func (o *New) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *New) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *New) SetKey(v string) {
	o.Key = v
}

// GetName returns the Name field value
func (o *New) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *New) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *New) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *New) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *New) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *New) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *New) SetDescription(v string) {
	o.Description = &v
}

// GetCustomBranchName returns the CustomBranchName field value if set, zero value otherwise.
func (o *New) GetCustomBranchName() string {
	if o == nil || IsNil(o.CustomBranchName) {
		var ret string
		return ret
	}
	return *o.CustomBranchName
}

// GetCustomBranchNameOk returns a tuple with the CustomBranchName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *New) GetCustomBranchNameOk() (*string, bool) {
	if o == nil || IsNil(o.CustomBranchName) {
		return nil, false
	}
	return o.CustomBranchName, true
}

// HasCustomBranchName returns a boolean if a field has been set.
func (o *New) HasCustomBranchName() bool {
	if o != nil && !IsNil(o.CustomBranchName) {
		return true
	}

	return false
}

// SetCustomBranchName gets a reference to the given string and assigns it to the CustomBranchName field.
func (o *New) SetCustomBranchName(v string) {
	o.CustomBranchName = &v
}

// GetJwks returns the Jwks field value if set, zero value otherwise.
func (o *New) GetJwks() Jwks {
	if o == nil || IsNil(o.Jwks) {
		var ret Jwks
		return ret
	}
	return *o.Jwks
}

// GetJwksOk returns a tuple with the Jwks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *New) GetJwksOk() (*Jwks, bool) {
	if o == nil || IsNil(o.Jwks) {
		return nil, false
	}
	return o.Jwks, true
}

// HasJwks returns a boolean if a field has been set.
func (o *New) HasJwks() bool {
	if o != nil && !IsNil(o.Jwks) {
		return true
	}

	return false
}

// SetJwks gets a reference to the given Jwks and assigns it to the Jwks field.
func (o *New) SetJwks(v Jwks) {
	o.Jwks = &v
}

func (o New) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o New) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["key"] = o.Key
	toSerialize["name"] = o.Name
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.CustomBranchName) {
		toSerialize["custom_branch_name"] = o.CustomBranchName
	}
	if !IsNil(o.Jwks) {
		toSerialize["jwks"] = o.Jwks
	}
	return toSerialize, nil
}

type NullableNew struct {
	value *New
	isSet bool
}

func (v NullableNew) Get() *New {
	return v.value
}

func (v *NullableNew) Set(val *New) {
	v.value = val
	v.isSet = true
}

func (v NullableNew) IsSet() bool {
	return v.isSet
}

func (v *NullableNew) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNew(val *New) *NullableNew {
	return &NullableNew{value: val, isSet: true}
}

func (v NullableNew) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNew) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
